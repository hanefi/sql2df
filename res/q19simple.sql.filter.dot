digraph {
"INPUTS, id: 25" -> "Selection, id: 186"[label="l_extendedprice[decimal (15, 2)] = 60"]
"Selection, id: 186" -> "OUTPUTS, id: 26"[label="l_extendedprice[decimal (15, 2)] = 60"]
"INPUTS, id: 25" -> "Selection, id: 187"[label="l_discount[decimal (15, 2)] = 60"]
"Selection, id: 187" -> "OUTPUTS, id: 26"[label="l_discount[decimal (15, 2)] = 60"]
"And, id: 29" -> "Selection, id: 187"[label="[boolean] = 8"]
"And, id: 29" -> "Selection, id: 186"[label="[boolean] = 8"]
"And, id: 32" -> "And, id: 29"[label="[boolean] = 8"]
"And, id: 35" -> "And, id: 32"[label="[boolean] = 8"]
"And, id: 38" -> "And, id: 35"[label="[boolean] = 8"]
"And, id: 41" -> "And, id: 38"[label="[boolean] = 8"]
"And, id: 44" -> "And, id: 41"[label="[boolean] = 8"]
"And, id: 47" -> "And, id: 44"[label="[boolean] = 8"]
"JOIN MinorThan, id: 56" -> "And, id: 47"[label="[boolean] = 8"]
"EqualsTo, id: 65" -> "And, id: 47"[label="[boolean] = 8"]
"Or, id: 68" -> "And, id: 44"[label="[boolean] = 8"]
"Or, id: 71" -> "Or, id: 68"[label="[boolean] = 8"]
"Or, id: 74" -> "Or, id: 71"[label="[boolean] = 8"]
"EqualsTo, id: 92" -> "Or, id: 74"[label="[boolean] = 8"]
"EqualsTo, id: 83" -> "Or, id: 74"[label="[boolean] = 8"]
"EqualsTo, id: 101" -> "Or, id: 71"[label="[boolean] = 8"]
"EqualsTo, id: 110" -> "Or, id: 68"[label="[boolean] = 8"]
"GreaterThanEquals, id: 119" -> "And, id: 41"[label="[boolean] = 8"]
"MinorThanEquals, id: 134" -> "And, id: 38"[label="[boolean] = 8"]
"Addition, id: 127" -> "MinorThanEquals, id: 134"[label="[integer] = 32"]
"And, id: 137" -> "And, id: 35"[label="[boolean] = 8"]
"GreaterThanEquals, id: 146" -> "And, id: 137"[label="[boolean] = 8"]
"MinorThanEquals, id: 155" -> "And, id: 137"[label="[boolean] = 8"]
"Or, id: 158" -> "And, id: 32"[label="[boolean] = 8"]
"EqualsTo, id: 176" -> "Or, id: 158"[label="[boolean] = 8"]
"EqualsTo, id: 167" -> "Or, id: 158"[label="[boolean] = 8"]
"EqualsTo, id: 185" -> "And, id: 29"[label="[boolean] = 8"]
"INPUTS, id: 25" -> "GreaterThanEquals, id: 146"[label="1[integer] = 32"]
"INPUTS, id: 25" -> "MinorThanEquals, id: 134"[label="l_quantity[decimal (15, 2)] = 60"]
"INPUTS, id: 25" -> "EqualsTo, id: 185"[label="l_shipinstruct[char (25)] = 200"]
"INPUTS, id: 25" -> "GreaterThanEquals, id: 119"[label="l_quantity[decimal (15, 2)] = 60"]
"INPUTS, id: 25" -> "EqualsTo, id: 65"[label="Brand#12[char (8)] = 64"]
"INPUTS, id: 25" -> "MinorThanEquals, id: 155"[label="p_size[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 101"[label="SM PACK[char (7)] = 56"]
"INPUTS, id: 25" -> "Addition, id: 127"[label="10[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 92"[label="SM BOX[char (6)] = 48"]
"INPUTS, id: 25" -> "EqualsTo, id: 176"[label="l_shipmode[char (10)] = 80"]
"INPUTS, id: 25" -> "Addition, id: 127"[label="1[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 167"[label="l_shipmode[char (10)] = 80"]
"INPUTS, id: 25" -> "EqualsTo, id: 185"[label="DELIVER IN PERSON[char (17)] = 136"]
"INPUTS, id: 25" -> "JOIN MinorThan, id: 56"[label="p_partkey[integer] = 32"]
"INPUTS, id: 25" -> "MinorThanEquals, id: 155"[label="5[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 167"[label="AIR[char (3)] = 24"]
"INPUTS, id: 25" -> "EqualsTo, id: 101"[label="p_container[char (10)] = 80"]
"INPUTS, id: 25" -> "EqualsTo, id: 83"[label="SM CASE[char (7)] = 56"]
"INPUTS, id: 25" -> "EqualsTo, id: 65"[label="p_brand[char (10)] = 80"]
"INPUTS, id: 25" -> "GreaterThanEquals, id: 119"[label="1[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 92"[label="p_container[char (10)] = 80"]
"INPUTS, id: 25" -> "EqualsTo, id: 110"[label="p_container[char (10)] = 80"]
"INPUTS, id: 25" -> "GreaterThanEquals, id: 146"[label="p_size[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 176"[label="AIR REG[char (7)] = 56"]
"INPUTS, id: 25" -> "JOIN MinorThan, id: 56"[label="l_partkey[integer] = 32"]
"INPUTS, id: 25" -> "EqualsTo, id: 110"[label="SM PKG[char (6)] = 48"]
"INPUTS, id: 25" -> "EqualsTo, id: 83"[label="p_container[char (10)] = 80"]
}
